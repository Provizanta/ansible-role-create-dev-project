# {{ ansible_managed }}

# clang-tidy
option(${PROJECT_NAME_UPPERCASE}_ALLOW_CLANG_TIDY_UTILITY "Allow clang-tidy to run on compiled files" ${PROJECT_NAME_UPPERCASE}_USE_CODE_QUALITY_TOOLS)

if(${PROJECT_NAME_UPPERCASE}_ALLOW_CLANG_TIDY_UTILITY AND CMAKE_VERSION VERSION_GREATER 3.6)
    set(CLANG_TIDY_BINARY "clang-tidy" "clang-tidy-10" "clang-tidy-9" "clang-tidy-8" "clang-tidy-7" "clang-tidy-6" CACHE STRING "Clang-tidy binary name or path to the desired binary")
    set(CLANG_TIDY_EXTRA_ARGS "-header-filter=.*" CACHE STRING "Clang-tidy extra arguments to be passed to the binary")

    option(CLANG_TIDY_FIX "Use clang-tidy to perform suggested fixes" OFF)
    find_program(CLANG_TIDY_UTILITY_EXECUTABLE NAMES ${CLANG_TIDY_BINARY})

    if(CLANG_TIDY_UTILITY_EXECUTABLE)
        message(STATUS "Found clang-tidy: able to perform analysis in compile time")
        if(CLANG_TIDY_FIX)
            set(CMAKE_CXX_CLANG_TIDY "${CLANG_TIDY_UTILITY_EXECUTABLE}" "-fix" "${CLANG_TIDY_EXTRA_ARGS}")
        else()
            set(CMAKE_CXX_CLANG_TIDY "${CLANG_TIDY_UTILITY_EXECUTABLE}" "${CLANG_TIDY_EXTRA_ARGS}")
        endif()
    endif()
endif()

mark_as_advanced(
    CLANG_TIDY_UTILITY_EXECUTABLE
    CLANG_TIDY_BINARY
    CLANG_TIDY_EXTRA_ARGS
)
