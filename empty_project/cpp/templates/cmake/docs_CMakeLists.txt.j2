# {{ ansible_managed }}

find_package(Doxygen OPTIONAL_COMPONENTS dot mscgen dia)

{% set PROJECT_NAME = (project_root_path | basename) -%}
option({{ PROJECT_NAME | upper }}_BUILD_DOCUMENTATION "Build project documentation using Doxygen."
       ${DOXYGEN_FOUND})
option({{ PROJECT_NAME | upper }}_INSTALL_DOCUMENTATION "Install entire project documentation." ${%raw%}{{%endraw%}{{ PROJECT_NAME | upper }}_BUILD_DOCUMENTATION})

if({{ PROJECT_NAME | upper }}_BUILD_DOCUMENTATION)
    if(DOXYGEN_FOUND)
        # file(GLOB_RECURSE THIS_PROJECT_PUBLIC_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/include/*.h)
        message(STATUS "Found Doxygen: use target 'docs-doxygen' to build doxygen documentation")

        set(DOXYGEN_OUTPUT_DIRECTORY {{ build['preferences']['use_build_type_subdir'] | ternary('${project_BINARY_DIR}', '${CMAKE_CURRENT_SOURCE_DIR}') }}/doxygen)
        doxygen_add_docs("docs-doxygen"
            ${PROJECT_SOURCE_DIR}/src/
            ${PROJECT_SOURCE_DIR}/include/
            COMMENT "Generating documentation using doxygen"
        )

        set(DOC_TARGETS_IDENTIFIED docs-doxygen)
    else()
        message(FATAL_ERROR "Doxygen is needed to build the documentation.")
    endif()

    {#
    #   Needed a better integration with Sphinx: https://devblogs.microsoft.com/cppblog/clear-functional-c-documentation-with-sphinx-breathe-doxygen-cmake/
    #    find_package(Sphinx)
    #    if(SPHINX_UTILITY_EXECUTABLE)
    #        set(SPHINX_SOURCE ${CMAKE_CURRENT_SOURCE_DIR})
    #        set(SPHINX_BUILD ${CMAKE_CURRENT_BINARY_DIR}/sphinx)
    #
    #        add_custom_target(docs-sphinx
    #                          COMMAND ${SPHINX_EXECUTABLE} -b html ${SPHINX_SOURCE} ${SPHINX_BUILD}
    #                          WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    #                          COMMENT "Generating documentation with Sphinx")
    #        set(DOC_TARGETS_IDENTIFIED ${DOC_TARGETS_IDENTIFIED} "docs-sphinx")
    #    endif()
    #}

    if(DOC_TARGETS_IDENTIFIED)
        add_custom_target(docs ALL
                          DEPENDS ${DOC_TARGETS_IDENTIFIED}
                          COMMENT "Generate the entire project documentation")
        message(STATUS "Use target 'docs' to generate the entire project documentation")
    endif()

    if({{ PROJECT_NAME | upper }}_INSTALL_DOCUMENTATION)
        install(DIRECTORY ${PROJECT_SOURCE_DIR}/docs
                DESTINATION share/{{ PROJECT_NAME }}
                PATTERN CMakeLists.txt EXCLUDE)
    endif()
endif()
