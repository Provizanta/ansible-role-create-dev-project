# {{ ansible_managed }}

find_package(Doxygen OPTIONAL_COMPONENTS dot mscgen dia)

option(${PROJECT_NAME_UPPERCASE}_DOCS_BUILD "Build project documentation using Doxygen." ${DOXYGEN_FOUND})
option(${PROJECT_NAME_UPPERCASE}_DOCS_INSTALL "Install the entire project documentation." ${PROJECT_NAME_UPPERCASE}_DOCS_BUILD)

mark_as_advanced(
    ${PROJECT_NAME_UPPERCASE}_DOCS_BUILD
    ${PROJECT_NAME_UPPERCASE}_DOCS_INSTALL
)

if(${PROJECT_NAME_UPPERCASE}_DOCS_BUILD)
    if(DOXYGEN_FOUND)
        # file(GLOB_RECURSE THIS_PROJECT_PUBLIC_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/include/*.h)
        message(STATUS "Found Doxygen: use target 'docs-doxygen' to build doxygen documentation")

        set(DOXYGEN_OUTPUT_DIRECTORY ${${PROJECT_NAME_UPPERCASE}_BINARY_DIR}/doxygen)
        doxygen_add_docs("docs-doxygen"
            ${PROJECT_SOURCE_DIR}/src/
            ${PROJECT_SOURCE_DIR}/include/
            COMMENT "Generating documentation using doxygen"
        )

        set(DOC_TARGETS_IDENTIFIED docs-doxygen)
    else()
        message(FATAL_ERROR "Doxygen is needed to build the documentation.")
    endif()

    {#
    #   Needed a better integration with Sphinx: https://devblogs.microsoft.com/cppblog/clear-functional-c-documentation-with-sphinx-breathe-doxygen-cmake/
    #    find_package(Sphinx)
    #    if(SPHINX_EXECUTABLE)
    #        set(SPHINX_SOURCE ${CMAKE_CURRENT_SOURCE_DIR})
    #        set(SPHINX_BUILD ${CMAKE_CURRENT_BINARY_DIR}/sphinx)
    #
    #        add_custom_target(docs-sphinx
    #                          COMMAND ${SPHINX_EXECUTABLE} -b html ${SPHINX_SOURCE} ${SPHINX_BUILD}
    #                          WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    #                          COMMENT "Generating documentation with Sphinx")
    #        set(DOC_TARGETS_IDENTIFIED ${DOC_TARGETS_IDENTIFIED} "docs-sphinx")
    #    endif()
    #}

    if(DOC_TARGETS_IDENTIFIED)
        add_custom_target(docs ALL
            DEPENDS ${DOC_TARGETS_IDENTIFIED}
            COMMENT "Generate the entire project documentation"
        )
        message(STATUS "Use target 'docs' to generate the entire project documentation")
    endif()

    if(${PROJECT_NAME_UPPERCASE}_DOCS_INSTALL)
        install(DIRECTORY ${PROJECT_SOURCE_DIR}/docs
            DESTINATION share/${PROJECT_NAME}
            PATTERN CMakeLists.txt EXCLUDE
        )
    endif()
endif()
