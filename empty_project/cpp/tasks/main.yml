---
# vi: ft=ansible.yaml

- name: establish project facts
  set_fact:
    project:
      "{{ {
           'version': '0.1.0',
           'license': 'wtfpl',
           'description': {
             'short': '',
             'long': ''
           },
         } | combine(project, recursive=True) }}"
    build:
      "{{ {
           'languages': ['CXX'],
           'settings': {}
          } | combine(build | default({}), recursive=True) }}"
    project_root_path: "{{ path + '/' + (project['name'] | lower | replace(' ', substitutes[' '])) }}"

- name: establish project skeleton
  when: item.use | default(true)
  file:
    path: "{{ project_root_path }}/{{ item.dest }}"
    state: directory
  loop:
    - dest: "build"
    - dest: "include"
    - dest: "src"
    - dest: "lib"
    - dest: "etc"
    - dest: "docs"
    - dest: "tests"
      use: "{{ tests | length > 0 }}"

- include_tasks: build/cmake.yml

- name: establish project readme
  template:
    src: "README.md.j2"
    dest: "{{ project_root_path }}/README.md"

- name: establish project license
  import_role:
    name: "{{ role_path }}/../../license"
  vars:
    license: "{{ project['license'] }}"

- name: identify software version control in project directory
  stat:
    path: "{{ project_root_path }}/.git"
  register: git_config

- name: establish ignore file
  when: git_config.stat.isdir is defined and git_config.stat.isdir
  import_role:
    name: "{{ role_path }}/../../ignore_file"
  vars:
    path: "{{ project_root_path }}"
    language: "C++"
    ignore:
      - "build/"
      - "lib/"

- name: establish clang-format
  when: build['format'] is defined
  copy:
    content: "{{ build['format'] }}"
    dest: "{{ project_root_path }}/.clang-format"
